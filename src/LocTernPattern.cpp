#include "features/LocTernPattern.h"



typedef unsigned char uchar;

using namespace std;
using namespace cv;


LocTernPattern::LocTernPattern() 
{
    dist_ = new EuclideanDistance<vector<double> >();

}


LocTernPattern::~LocTernPattern()
{}


LocTernPattern::OutputType LocTernPattern::compute(const cv::Mat &img)
{

	// adjust data type
	Mat img_byte;
	if (img.depth() != CV_32F) {
		img.convertTo(img_byte, CV_32F);
	} else {
		img_byte = img;
	}
	// adjust color space
	Mat img_gray;	
	if (img_byte.channels() == 1) {
		img_gray = img_byte;
	} else if (img_byte.channels() == 3 || img_byte.channels() == 4) {
		cv::cvtColor(img_byte, img_gray, CV_RGB2GRAY);
	}

	// look-up Table that maps 6561 values into 256 bins (computed by using spectral clustering algorithm)
	int cluster_arr[6561] = {41, 126, 126, 8, 176, 56, 8, 56, 56, 236, 0, 0, 8, 176, 0, 8, 176, 56, 236, 0, 0, 123, 0, 0, 123, 123, 214, 11, 11, 126, 8, 103, 56, 8, 56, 56, 11, 255, 0, 132, 219, 252, 123, 219, 252, 236, 0, 0, 123, 209, 252, 123, 123, 252, 11, 11, 143, 69, 69, 143, 69, 69, 52, 11, 11, 120, 68, 252, 252, 68, 68, 252, 79, 120, 120, 68, 252, 252, 68, 68, 252, 220, 91, 91, 8, 176, 56, 8, 225, 56, 220, 218, 233, 132, 176, 233, 8, 176, 56, 236, 85, 85, 23, 142, 85, 23, 142, 214, 11, 119, 155, 132, 219, 249, 8, 219, 56, 132, 218, 25, 132, 219, 219, 132, 219, 219, 79, 209, 85, 132, 209, 209, 123, 142, 162, 11, 11, 155, 69, 249, 249, 69, 69, 249, 11, 9, 197, 132, 219, 252, 21, 219, 162, 79, 79, 197, 79, 248, 252, 68, 162, 162, 220, 91, 91, 220, 225, 91, 225, 225, 225, 220, 218, 91, 23, 218, 233, 23, 225, 225, 23, 85, 85, 23, 142, 85, 23, 142, 142, 196, 196, 155, 196, 249, 249, 21, 225, 249, 196, 218, 25, 132, 218, 25, 21, 142, 162, 79, 85, 85, 23, 142, 85, 23, 142, 162, 196, 196, 155, 196, 249, 249, 21, 249, 249, 196, 197, 197, 21, 248, 249, 21, 21, 162, 79, 197, 197, 79, 248, 197, 21, 162, 162, 30, 126, 126, 4, 176, 56, 4, 176, 56, 236, 218, 0, 132, 176, 51, 4, 176, 177, 236, 236, 0, 236, 2, 2, 123, 2, 2, 11, 255, 143, 132, 219, 105, 242, 219, 52, 132, 255, 255, 132, 219, 219, 132, 219, 219, 236, 22, 22, 132, 219, 3, 123, 219, 3, 11, 143, 143, 69, 219, 143, 69, 52, 52, 11, 255, 143, 132, 219, 252, 242, 219, 52, 200, 22, 22, 200, 219, 3, 224, 224, 3, 220, 218, 91, 132, 176, 51, 4, 176, 56, 218, 218, 218, 132, 218, 51, 132, 176, 183, 236, 218, 85, 132, 218, 2, 100, 142, 2, 132, 119, 119, 132, 219, 219, 132, 219, 183, 132, 218, 218, 132, 219, 219, 132, 219, 183, 90, 218, 22, 132, 219, 219, 132, 219, 183, 11, 119, 143, 132, 219, 249, 69, 219, 52, 132, 218, 22, 132, 219, 219, 132, 219, 219, 79, 22, 22, 132, 219, 3, 224, 219, 162, 220, 91, 91, 220, 218, 91, 77, 225, 253, 220, 218, 91, 132, 218, 218, 77, 142, 253, 20, 218, 85, 23, 218, 85, 100, 142, 212, 196, 218, 91, 132, 211, 249, 77, 211, 249, 218, 218, 218, 132, 218, 218, 132, 211, 183, 79, 218, 228, 132, 218, 218, 100, 142, 162, 196, 196, 113, 196, 249, 249, 21, 249, 249, 50, 218, 197, 132, 211, 249, 21, 211, 162, 79, 197, 197, 40, 248, 197, 40, 162, 162, 30, 78, 78, 4, 177, 177, 4, 177, 177, 30, 145, 145, 4, 177, 177, 4, 177, 177, 236, 145, 145, 117, 2, 2, 117, 2, 2, 30, 78, 78, 242, 105, 105, 242, 242, 177, 200, 22, 22, 132, 219, 105, 242, 219, 177, 200, 22, 22, 200, 219, 3, 224, 224, 3, 31, 31, 143, 31, 31, 143, 242, 242, 52, 200, 22, 22, 200, 219, 3, 242, 242, 3, 200, 22, 22, 200, 3, 3, 224, 224, 3, 30, 78, 78, 4, 177, 177, 4, 177, 177, 30, 218, 145, 132, 218, 177, 4, 177, 177, 20, 145, 145, 100, 2, 2, 100, 2, 2, 30, 78, 78, 132, 219, 105, 242, 219, 177, 132, 218, 22, 132, 219, 219, 132, 219, 219, 90, 22, 22, 90, 219, 3, 100, 219, 3, 31, 31, 113, 31, 31, 113, 242, 124, 124, 50, 22, 22, 132, 219, 219, 242, 219, 124, 200, 22, 22, 200, 219, 3, 224, 224, 3, 129, 129, 91, 129, 129, 253, 77, 77, 253, 20, 218, 228, 77, 218, 253, 77, 77, 253, 20, 20, 228, 20, 212, 212, 100, 212, 212, 129, 129, 113, 129, 129, 113, 77, 77, 253, 50, 218, 228, 132, 218, 218, 77, 211, 253, 20, 228, 228, 100, 218, 228, 100, 212, 212, 50, 113, 113, 50, 113, 113, 203, 124, 124, 50, 50, 113, 50, 211, 113, 40, 124, 124, 50, 228, 228, 40, 40, 228, 40, 40, 232, 59, 126, 126, 8, 51, 136, 8, 8, 56, 16, 87, 139, 8, 51, 51, 8, 82, 174, 16, 87, 139, 221, 87, 139, 229, 229, 174, 59, 255, 60, 103, 103, 103, 8, 103, 56, 255, 255, 25, 103, 103, 103, 134, 103, 103, 16, 87, 139, 221, 103, 252, 123, 219, 174, 182, 182, 60, 69, 103, 60, 69, 69, 52, 182, 255, 60, 103, 103, 252, 68, 103, 252, 17, 17, 120, 17, 103, 252, 68, 68, 53, 59, 51, 91, 8, 51, 51, 8, 82, 198, 9, 51, 25, 9, 51, 51, 82, 82, 51, 180, 87, 85, 188, 51, 51, 229, 142, 174, 9, 9, 25, 9, 9, 51, 9, 82, 175, 9, 9, 25, 9, 9, 25, 9, 219, 219, 90, 209, 25, 90, 209, 209, 95, 219, 219, 182, 9, 155, 9, 9, 175, 69, 175, 175, 9, 9, 25, 9, 9, 219, 95, 219, 205, 79, 248, 243, 248, 248, 248, 95, 95, 162, 220, 230, 91, 96, 96, 198, 244, 225, 198, 180, 218, 25, 188, 51, 51, 65, 142, 198, 180, 180, 85, 188, 188, 179, 65, 142, 179, 196, 25, 25, 211, 211, 25, 223, 211, 175, 9, 25, 25, 211, 211, 25, 211, 211, 205, 79, 248, 25, 188, 248, 179, 65, 142, 179, 196, 196, 155, 196, 211, 175, 223, 175, 175, 196, 248, 25, 248, 248, 205, 21, 205, 205, 79, 248, 197, 248, 248, 248, 95, 248, 162, 30, 255, 126, 134, 51, 51, 4, 204, 34, 255, 255, 51, 134, 51, 51, 134, 82, 51, 236, 87, 207, 90, 51, 51, 117, 226, 174, 255, 255, 255, 134, 219, 51, 134, 204, 52, 255, 255, 255, 134, 219, 219, 134, 219, 219, 90, 255, 255, 90, 219, 219, 134, 219, 219, 182, 255, 143, 134, 219, 52, 217, 52, 52, 255, 255, 255, 134, 219, 219, 134, 219, 52, 17, 5, 5, 90, 219, 3, 224, 219, 3, 9, 51, 51, 9, 51, 51, 82, 82, 51, 9, 218, 51, 9, 51, 51, 82, 82, 51, 90, 27, 207, 90, 51, 51, 90, 82, 51, 9, 9, 25, 9, 9, 219, 9, 219, 219, 9, 9, 25, 9, 219, 219, 9, 219, 219, 90, 90, 92, 90, 219, 219, 90, 219, 219, 9, 9, 119, 9, 9, 219, 9, 219, 175, 9, 9, 92, 9, 219, 219, 9, 219, 219, 90, 92, 92, 90, 219, 92, 95, 219, 232, 220, 218, 91, 96, 96, 51, 244, 211, 198, 218, 218, 166, 211, 218, 51, 211, 211, 51, 180, 166, 166, 188, 27, 179, 100, 142, 179, 211, 211, 25, 211, 211, 211, 211, 211, 211, 211, 218, 25, 211, 211, 211, 211, 211, 211, 90, 92, 92, 90, 211, 92, 211, 211, 179, 196, 211, 29, 211, 211, 175, 203, 211, 175, 211, 92, 92, 211, 211, 92, 211, 211, 205, 79, 92, 92, 248, 248, 92, 95, 248, 232, 30, 78, 78, 33, 204, 34, 4, 204, 34, 30, 255, 207, 134, 251, 193, 117, 193, 193, 75, 207, 207, 117, 193, 193, 117, 193, 193, 148, 78, 78, 134, 204, 105, 242, 204, 34, 148, 255, 255, 134, 219, 219, 134, 219, 219, 75, 90, 207, 90, 219, 219, 117, 219, 99, 31, 31, 147, 31, 31, 147, 242, 242, 52, 200, 255, 147, 134, 219, 219, 242, 219, 99, 200, 5, 5, 200, 219, 3, 224, 99, 99, 30, 78, 78, 251, 251, 251, 4, 251, 34, 90, 218, 207, 251, 251, 251, 251, 251, 251, 90, 207, 207, 90, 90, 207, 117, 226, 210, 9, 9, 78, 9, 219, 219, 9, 219, 219, 90, 90, 92, 90, 219, 219, 219, 219, 219, 90, 90, 207, 90, 90, 92, 90, 219, 219, 31, 31, 113, 31, 219, 219, 203, 219, 6, 90, 92, 92, 90, 219, 92, 219, 219, 219, 90, 92, 92, 90, 92, 92, 44, 219, 232, 129, 129, 173, 129, 173, 173, 77, 77, 253, 169, 218, 166, 251, 251, 173, 77, 251, 253, 20, 166, 166, 100, 27, 212, 100, 212, 212, 129, 129, 113, 211, 211, 173, 203, 211, 6, 90, 92, 92, 211, 211, 92, 211, 211, 211, 206, 92, 228, 90, 92, 92, 100, 211, 212, 108, 113, 113, 203, 211, 113, 203, 6, 6, 50, 92, 92, 211, 92, 92, 203, 211, 6, 206, 92, 171, 40, 92, 92, 40, 232, 232, 59, 59, 136, 59, 136, 136, 153, 136, 136, 16, 87, 139, 16, 87, 136, 229, 229, 174, 16, 87, 139, 229, 87, 139, 229, 229, 174, 59, 59, 60, 59, 103, 136, 217, 103, 136, 16, 87, 60, 103, 103, 103, 229, 103, 174, 16, 87, 139, 221, 87, 139, 229, 229, 174, 182, 182, 60, 182, 182, 60, 217, 191, 191, 182, 182, 60, 182, 103, 60, 217, 53, 53, 17, 17, 243, 17, 53, 53, 95, 53, 53, 59, 230, 230, 59, 82, 136, 244, 82, 198, 180, 87, 139, 188, 82, 12, 229, 82, 12, 180, 87, 139, 188, 87, 139, 229, 229, 174, 59, 9, 60, 9, 9, 12, 223, 82, 12, 9, 9, 25, 9, 9, 12, 9, 82, 12, 186, 87, 243, 188, 190, 74, 95, 43, 174, 182, 182, 60, 182, 9, 175, 223, 223, 175, 182, 9, 243, 9, 9, 205, 95, 205, 205, 186, 243, 243, 95, 248, 243, 95, 95, 53, 230, 230, 230, 244, 230, 198, 244, 198, 198, 180, 230, 230, 188, 188, 12, 65, 65, 198, 180, 180, 166, 188, 188, 179, 65, 65, 179, 58, 230, 230, 58, 211, 12, 223, 223, 198, 186, 25, 25, 188, 211, 12, 65, 205, 205, 186, 186, 243, 188, 188, 179, 65, 65, 179, 58, 58, 29, 58, 58, 175, 223, 223, 175, 186, 186, 243, 186, 205, 205, 223, 205, 205, 186, 186, 243, 186, 248, 243, 95, 95, 205, 59, 199, 199, 33, 204, 136, 33, 204, 34, 16, 87, 199, 134, 82, 51, 229, 82, 174, 16, 87, 139, 229, 87, 139, 229, 229, 174, 148, 255, 60, 134, 204, 12, 217, 204, 191, 148, 255, 74, 134, 103, 74, 134, 82, 74, 16, 87, 139, 190, 190, 74, 229, 190, 174, 182, 182, 60, 217, 191, 191, 217, 191, 191, 182, 255, 60, 134, 130, 74, 217, 191, 191, 17, 5, 5, 17, 190, 53, 44, 53, 53, 59, 199, 199, 9, 82, 12, 244, 82, 12, 9, 82, 199, 9, 82, 12, 82, 82, 12, 180, 87, 166, 188, 190, 74, 229, 82, 174, 9, 9, 106, 9, 9, 12, 9, 82, 12, 9, 106, 106, 9, 9, 12, 9, 82, 12, 190, 190, 74, 190, 190, 74, 95, 190, 74, 182, 9, 29, 9, 9, 12, 217, 191, 191, 9, 9, 106, 9, 130, 74, 95, 130, 205, 186, 190, 243, 190, 190, 74, 95, 95, 232, 169, 230, 230, 244, 173, 173, 244, 244, 198, 180, 166, 166, 188, 82, 12, 244, 82, 12, 180, 166, 166, 188, 188, 179, 65, 65, 179, 58, 106, 29, 211, 211, 12, 244, 211, 12, 106, 106, 106, 211, 211, 12, 211, 211, 12, 186, 190, 166, 188, 190, 179, 65, 43, 179, 58, 29, 29, 58, 211, 29, 223, 223, 6, 186, 106, 29, 211, 211, 205, 95, 205, 205, 186, 186, 171, 186, 248, 171, 95, 232, 232, 33, 199, 199, 33, 204, 34, 33, 204, 34, 75, 199, 199, 33, 193, 193, 33, 193, 193, 75, 75, 207, 75, 193, 193, 117, 193, 193, 148, 148, 147, 33, 204, 147, 33, 204, 34, 148, 148, 147, 148, 130, 74, 134, 204, 99, 75, 75, 207, 75, 190, 99, 44, 99, 99, 148, 147, 147, 148, 147, 147, 217, 191, 191, 148, 147, 147, 148, 130, 147, 44, 99, 99, 75, 5, 5, 44, 99, 99, 44, 99, 99, 169, 199, 199, 33, 204, 173, 33, 204, 34, 169, 199, 199, 127, 251, 74, 127, 82, 210, 75, 207, 207, 127, 190, 210, 127, 210, 210, 148, 106, 106, 9, 130, 12, 203, 204, 6, 148, 106, 106, 130, 130, 74, 130, 130, 74, 206, 190, 207, 190, 190, 74, 44, 190, 210, 108, 108, 147, 203, 130, 147, 203, 6, 6, 108, 130, 147, 130, 130, 130, 44, 130, 6, 206, 5, 171, 44, 190, 171, 44, 44, 232, 169, 169, 173, 169, 173, 173, 244, 173, 173, 169, 166, 166, 127, 173, 173, 127, 210, 210, 206, 166, 166, 127, 210, 210, 127, 210, 210, 169, 106, 106, 203, 184, 173, 203, 184, 6, 206, 106, 106, 211, 211, 106, 127, 184, 6, 206, 206, 171, 206, 190, 171, 127, 210, 210, 108, 108, 29, 203, 6, 6, 203, 6, 6, 108, 108, 171, 203, 130, 171, 203, 6, 6, 206, 171, 171, 206, 171, 171, 44, 232, 232, 41, 41, 126, 41, 176, 239, 81, 176, 56, 41, 233, 233, 176, 176, 233, 176, 176, 214, 165, 0, 0, 128, 209, 214, 123, 214, 214, 41, 36, 36, 18, 18, 239, 18, 18, 56, 255, 255, 36, 18, 18, 103, 18, 18, 183, 165, 209, 120, 209, 209, 209, 123, 163, 214, 11, 213, 213, 18, 18, 213, 227, 18, 222, 104, 255, 120, 18, 18, 252, 68, 18, 252, 104, 120, 120, 104, 163, 120, 68, 163, 163, 41, 233, 233, 176, 176, 233, 176, 176, 56, 116, 233, 233, 176, 176, 233, 176, 176, 183, 165, 209, 85, 209, 209, 209, 23, 142, 214, 119, 119, 36, 245, 119, 119, 245, 245, 183, 209, 209, 233, 209, 209, 209, 245, 183, 183, 209, 209, 209, 209, 209, 209, 209, 209, 45, 62, 119, 155, 245, 245, 119, 245, 245, 222, 195, 195, 195, 245, 195, 195, 245, 245, 149, 79, 209, 120, 209, 209, 209, 112, 163, 45, 220, 125, 125, 96, 96, 233, 37, 225, 231, 116, 116, 233, 96, 96, 233, 37, 142, 66, 24, 85, 85, 23, 142, 85, 23, 142, 66, 196, 119, 155, 245, 119, 119, 245, 245, 150, 116, 209, 25, 209, 209, 149, 245, 149, 149, 24, 209, 85, 209, 209, 209, 112, 142, 45, 196, 196, 155, 245, 245, 249, 245, 245, 150, 196, 195, 197, 245, 149, 149, 21, 149, 149, 79, 197, 197, 112, 248, 197, 112, 112, 45, 41, 255, 126, 176, 176, 105, 176, 176, 138, 255, 255, 233, 176, 176, 51, 176, 176, 183, 236, 145, 145, 83, 83, 2, 154, 83, 214, 255, 255, 36, 18, 18, 105, 18, 18, 183, 255, 255, 255, 18, 18, 105, 18, 18, 183, 255, 255, 255, 83, 83, 183, 83, 83, 183, 11, 255, 143, 18, 18, 105, 18, 18, 52, 255, 255, 255, 18, 18, 195, 18, 18, 183, 104, 255, 120, 159, 195, 3, 224, 163, 3, 119, 119, 233, 176, 176, 183, 176, 176, 183, 83, 218, 233, 83, 83, 183, 83, 176, 183, 83, 27, 145, 83, 83, 183, 83, 83, 183, 119, 119, 119, 119, 119, 119, 245, 183, 183, 83, 119, 93, 83, 83, 183, 83, 183, 183, 83, 209, 93, 83, 83, 183, 83, 83, 183, 119, 119, 119, 119, 119, 119, 245, 245, 183, 195, 195, 195, 195, 195, 195, 245, 195, 183, 195, 195, 195, 195, 195, 195, 83, 195, 45, 220, 119, 55, 96, 96, 55, 37, 183, 183, 116, 218, 55, 83, 218, 183, 83, 183, 183, 24, 27, 7, 83, 83, 183, 100, 142, 183, 119, 119, 119, 119, 119, 119, 245, 183, 183, 83, 218, 93, 83, 83, 183, 83, 183, 183, 83, 93, 93, 83, 83, 183, 83, 83, 183, 196, 119, 48, 245, 119, 119, 245, 245, 124, 50, 195, 195, 195, 195, 195, 245, 195, 149, 109, 195, 197, 195, 195, 195, 112, 195, 45, 30, 78, 78, 164, 105, 105, 164, 164, 138, 89, 145, 145, 83, 83, 105, 154, 83, 138, 89, 145, 145, 89, 83, 2, 154, 2, 2, 14, 105, 105, 105, 105, 105, 164, 105, 105, 255, 255, 105, 83, 105, 105, 83, 83, 105, 89, 145, 145, 159, 83, 105, 224, 83, 110, 31, 31, 143, 31, 105, 105, 242, 19, 19, 200, 255, 57, 159, 105, 105, 242, 1, 19, 200, 57, 57, 159, 159, 3, 224, 224, 110, 30, 119, 78, 251, 251, 105, 164, 251, 177, 83, 83, 145, 83, 83, 251, 83, 83, 183, 89, 145, 145, 83, 83, 2, 100, 83, 146, 119, 119, 119, 119, 119, 105, 83, 183, 183, 83, 93, 93, 83, 83, 105, 83, 83, 183, 90, 93, 93, 83, 83, 93, 83, 83, 183, 31, 119, 48, 31, 119, 105, 234, 124, 124, 50, 195, 195, 83, 195, 195, 83, 1, 124, 109, 195, 22, 159, 195, 195, 224, 1, 3, 151, 151, 55, 151, 251, 55, 77, 168, 253, 151, 218, 55, 83, 83, 55, 77, 83, 253, 20, 7, 7, 26, 83, 212, 100, 212, 212, 151, 119, 48, 119, 119, 119, 77, 168, 124, 50, 93, 93, 83, 83, 93, 83, 83, 183, 109, 93, 228, 83, 83, 93, 100, 83, 212, 50, 48, 48, 50, 119, 124, 234, 124, 124, 50, 50, 48, 50, 195, 195, 40, 124, 124, 109, 109, 228, 40, 195, 38, 40, 40, 38, 41, 72, 126, 153, 103, 51, 153, 153, 63, 255, 255, 233, 134, 51, 51, 153, 82, 238, 16, 87, 139, 221, 221, 51, 221, 221, 214, 255, 255, 36, 103, 103, 103, 153, 103, 63, 255, 255, 255, 103, 103, 103, 134, 103, 103, 255, 255, 209, 221, 103, 209, 221, 221, 103, 121, 255, 213, 103, 103, 103, 227, 101, 222, 255, 255, 255, 103, 103, 103, 103, 103, 103, 17, 255, 120, 103, 103, 103, 68, 163, 71, 201, 201, 233, 96, 96, 51, 153, 82, 156, 201, 201, 233, 201, 51, 51, 82, 82, 51, 27, 27, 140, 221, 209, 51, 221, 221, 51, 201, 119, 25, 201, 103, 103, 245, 103, 156, 201, 209, 25, 201, 103, 209, 86, 103, 183, 209, 209, 209, 209, 209, 209, 221, 43, 209, 118, 119, 10, 245, 103, 103, 245, 245, 175, 133, 195, 25, 103, 103, 103, 245, 103, 149, 133, 133, 209, 133, 248, 209, 95, 43, 45, 96, 96, 235, 96, 96, 156, 96, 96, 156, 116, 27, 25, 96, 96, 51, 96, 96, 156, 180, 27, 140, 188, 27, 179, 65, 142, 179, 118, 254, 25, 96, 96, 156, 245, 245, 156, 118, 25, 25, 86, 209, 25, 86, 149, 149, 209, 209, 25, 209, 209, 209, 86, 43, 179, 118, 254, 155, 118, 254, 175, 245, 245, 175, 118, 254, 25, 118, 248, 149, 245, 149, 149, 189, 248, 197, 248, 248, 248, 97, 248, 45, 255, 255, 172, 134, 51, 51, 153, 204, 63, 255, 255, 255, 134, 51, 51, 134, 82, 51, 255, 255, 255, 221, 226, 51, 221, 226, 226, 255, 255, 255, 134, 103, 105, 134, 134, 1, 255, 255, 255, 134, 103, 74, 134, 1, 1, 255, 255, 255, 134, 240, 74, 134, 1, 1, 255, 255, 144, 134, 103, 103, 134, 1, 52, 255, 255, 255, 134, 103, 1, 134, 1, 1, 255, 255, 5, 134, 1, 1, 67, 1, 1, 201, 119, 51, 201, 251, 51, 82, 82, 156, 201, 27, 27, 201, 27, 51, 82, 82, 183, 27, 27, 27, 27, 27, 51, 86, 226, 226, 201, 119, 119, 201, 119, 119, 134, 194, 183, 201, 255, 93, 86, 219, 74, 86, 1, 183, 90, 27, 93, 90, 209, 74, 86, 43, 1, 119, 119, 119, 119, 119, 119, 245, 1, 1, 255, 195, 195, 86, 195, 195, 86, 1, 1, 90, 195, 92, 90, 195, 195, 86, 1, 1, 96, 96, 13, 96, 96, 156, 96, 96, 156, 27, 27, 27, 96, 27, 27, 86, 27, 183, 27, 27, 27, 27, 27, 27, 86, 27, 179, 118, 119, 119, 96, 119, 119, 245, 211, 156, 86, 27, 25, 86, 211, 93, 86, 211, 183, 90, 27, 93, 86, 27, 93, 86, 43, 183, 118, 119, 119, 118, 119, 119, 245, 245, 175, 118, 195, 92, 86, 195, 195, 86, 1, 149, 90, 92, 92, 86, 248, 92, 86, 1, 45, 30, 255, 172, 251, 251, 105, 164, 204, 34, 131, 255, 172, 134, 251, 251, 134, 226, 226, 89, 226, 207, 226, 226, 226, 117, 226, 226, 148, 255, 105, 134, 105, 105, 134, 204, 42, 255, 255, 255, 134, 1, 105, 134, 1, 1, 90, 255, 207, 90, 226, 1, 134, 1, 1, 31, 152, 147, 31, 105, 105, 80, 1, 42, 255, 255, 255, 134, 1, 1, 134, 1, 1, 107, 5, 5, 159, 1, 1, 224, 1, 99, 251, 251, 13, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 90, 27, 207, 90, 226, 226, 226, 226, 226, 119, 119, 119, 251, 119, 119, 251, 1, 1, 90, 93, 93, 90, 251, 93, 86, 1, 1, 90, 90, 93, 90, 90, 93, 90, 1, 1, 111, 119, 119, 119, 119, 119, 1, 1, 42, 90, 195, 92, 130, 130, 1, 1, 1, 1, 90, 92, 92, 90, 1, 92, 1, 1, 1, 169, 13, 13, 251, 251, 251, 250, 251, 253, 251, 27, 27, 251, 251, 251, 251, 251, 251, 98, 27, 7, 27, 27, 27, 100, 226, 212, 111, 119, 119, 119, 119, 119, 184, 184, 184, 90, 93, 93, 86, 93, 93, 86, 1, 1, 90, 93, 93, 90, 93, 93, 86, 1, 1, 111, 111, 246, 111, 119, 119, 203, 184, 208, 111, 92, 92, 86, 92, 92, 86, 1, 1, 160, 92, 92, 90, 92, 92, 40, 1, 232, 59, 72, 46, 153, 72, 136, 153, 153, 63, 16, 72, 139, 221, 103, 238, 39, 82, 238, 16, 87, 139, 221, 221, 139, 221, 221, 174, 121, 72, 46, 103, 103, 103, 114, 101, 63, 16, 103, 74, 103, 103, 103, 114, 103, 238, 16, 87, 139, 221, 221, 74, 221, 221, 71, 121, 121, 60, 215, 103, 137, 114, 101, 137, 121, 103, 49, 103, 103, 103, 114, 101, 137, 17, 17, 49, 17, 103, 49, 67, 71, 71, 201, 72, 235, 201, 82, 156, 153, 82, 156, 201, 201, 74, 201, 82, 74, 82, 82, 238, 180, 87, 140, 221, 221, 74, 221, 221, 47, 201, 201, 10, 201, 103, 156, 82, 82, 156, 201, 201, 74, 201, 103, 74, 86, 43, 74, 133, 190, 74, 221, 190, 74, 221, 43, 74, 118, 10, 10, 118, 103, 10, 223, 101, 137, 133, 133, 10, 133, 103, 74, 86, 43, 205, 133, 133, 243, 133, 133, 74, 95, 43, 71, 185, 230, 235, 96, 96, 156, 241, 156, 156, 180, 27, 235, 188, 96, 156, 65, 82, 156, 180, 140, 140, 188, 188, 179, 65, 65, 179, 118, 254, 235, 118, 254, 156, 223, 156, 156, 118, 254, 25, 118, 254, 74, 86, 43, 156, 189, 190, 247, 188, 43, 179, 65, 43, 179, 118, 254, 70, 118, 254, 70, 223, 223, 175, 118, 254, 254, 118, 254, 205, 97, 205, 205, 189, 247, 247, 189, 248, 247, 97, 202, 202, 178, 72, 172, 134, 204, 172, 153, 204, 63, 255, 255, 172, 134, 82, 74, 134, 82, 238, 16, 87, 139, 221, 226, 74, 221, 226, 216, 148, 255, 144, 134, 103, 74, 134, 204, 63, 255, 255, 74, 134, 103, 74, 134, 134, 74, 190, 190, 74, 190, 190, 74, 221, 43, 74, 215, 144, 144, 215, 103, 144, 217, 101, 137, 255, 255, 144, 134, 130, 74, 134, 130, 137, 17, 5, 5, 67, 190, 74, 67, 67, 71, 201, 201, 13, 201, 82, 156, 82, 82, 156, 201, 27, 74, 201, 82, 74, 82, 82, 74, 27, 27, 74, 27, 27, 74, 221, 226, 74, 201, 106, 106, 201, 194, 74, 82, 82, 156, 201, 106, 74, 201, 74, 74, 86, 43, 74, 190, 190, 74, 190, 190, 74, 43, 43, 74, 118, 119, 10, 130, 130, 119, 130, 130, 137, 133, 130, 106, 130, 130, 74, 130, 130, 74, 133, 190, 74, 190, 190, 74, 67, 43, 74, 185, 13, 13, 96, 96, 156, 244, 156, 156, 27, 27, 27, 27, 27, 74, 86, 82, 156, 98, 27, 73, 188, 27, 179, 135, 43, 179, 118, 106, 106, 118, 184, 156, 184, 184, 156, 118, 106, 106, 86, 27, 74, 86, 43, 74, 190, 190, 74, 190, 190, 74, 86, 43, 179, 118, 254, 29, 118, 254, 119, 223, 184, 208, 118, 254, 106, 118, 130, 74, 86, 43, 205, 189, 190, 247, 190, 190, 76, 97, 43, 202, 178, 178, 172, 33, 204, 172, 15, 204, 34, 131, 131, 172, 134, 226, 172, 15, 226, 193, 75, 131, 207, 192, 226, 216, 192, 226, 216, 148, 148, 147, 148, 204, 74, 15, 204, 42, 148, 255, 74, 134, 130, 74, 134, 130, 74, 75, 190, 102, 190, 190, 74, 35, 226, 99, 148, 152, 147, 80, 130, 147, 80, 80, 42, 148, 130, 147, 130, 130, 130, 35, 130, 99, 107, 5, 5, 35, 190, 99, 35, 99, 99, 169, 13, 13, 251, 251, 251, 250, 204, 32, 131, 27, 74, 251, 251, 74, 127, 226, 74, 131, 27, 207, 127, 226, 74, 127, 226, 210, 148, 106, 106, 130, 130, 74, 184, 184, 42, 130, 106, 106, 130, 130, 74, 130, 130, 74, 190, 190, 74, 190, 190, 74, 190, 190, 74, 108, 130, 147, 130, 130, 130, 80, 130, 42, 130, 130, 106, 130, 130, 130, 130, 130, 130, 160, 190, 5, 190, 190, 76, 44, 130, 232, 169, 13, 13, 169, 184, 173, 250, 184, 32, 169, 27, 73, 127, 27, 74, 127, 184, 157, 98, 73, 73, 127, 27, 73, 127, 210, 210, 169, 106, 106, 184, 184, 184, 184, 184, 184, 106, 106, 106, 86, 184, 74, 184, 184, 184, 206, 190, 73, 190, 190, 76, 167, 167, 210, 108, 108, 246, 158, 184, 208, 203, 184, 208, 108, 106, 106, 130, 130, 76, 167, 184, 208, 160, 160, 171, 160, 190, 76, 167, 167, 232, 41, 41, 36, 81, 239, 239, 81, 81, 239, 165, 170, 170, 128, 240, 239, 81, 81, 239, 165, 170, 170, 128, 128, 170, 128, 128, 214, 41, 36, 36, 81, 18, 239, 81, 81, 239, 165, 36, 36, 18, 18, 239, 81, 18, 239, 165, 170, 170, 128, 209, 170, 128, 163, 163, 62, 213, 213, 227, 213, 213, 227, 222, 222, 104, 104, 213, 104, 18, 213, 227, 163, 222, 104, 104, 120, 104, 163, 163, 163, 163, 163, 41, 125, 125, 81, 88, 239, 81, 81, 231, 116, 116, 233, 116, 88, 233, 81, 88, 66, 165, 170, 170, 128, 209, 66, 128, 61, 66, 62, 36, 36, 88, 88, 239, 81, 88, 239, 116, 209, 36, 88, 88, 209, 88, 88, 149, 165, 209, 28, 209, 209, 209, 112, 209, 45, 62, 62, 213, 62, 195, 213, 227, 222, 222, 62, 195, 28, 195, 195, 195, 112, 149, 222, 104, 28, 28, 112, 209, 28, 112, 163, 45, 116, 125, 125, 37, 125, 231, 37, 231, 231, 116, 116, 125, 116, 116, 66, 37, 61, 66, 24, 24, 7, 24, 61, 66, 61, 61, 66, 62, 125, 125, 37, 88, 150, 37, 150, 150, 116, 116, 28, 116, 149, 149, 37, 149, 149, 24, 24, 28, 24, 209, 28, 112, 61, 45, 62, 62, 155, 62, 150, 150, 245, 150, 150, 62, 28, 28, 112, 149, 149, 112, 149, 149, 24, 28, 28, 112, 28, 28, 112, 112, 45, 41, 84, 84, 81, 88, 239, 81, 81, 138, 165, 240, 84, 240, 240, 240, 154, 240, 138, 165, 170, 170, 128, 240, 170, 154, 154, 146, 14, 36, 36, 18, 18, 239, 81, 18, 239, 240, 240, 36, 18, 240, 240, 18, 18, 183, 165, 240, 170, 159, 240, 240, 154, 240, 110, 14, 213, 213, 18, 18, 213, 227, 18, 222, 104, 195, 57, 18, 18, 195, 18, 18, 222, 104, 57, 57, 159, 159, 110, 159, 163, 110, 88, 88, 84, 88, 88, 88, 81, 88, 231, 116, 88, 233, 88, 88, 88, 88, 88, 183, 165, 27, 7, 88, 88, 88, 154, 61, 146, 88, 88, 36, 88, 88, 88, 88, 88, 183, 88, 88, 93, 88, 88, 88, 88, 88, 183, 88, 93, 93, 88, 88, 93, 88, 88, 45, 62, 195, 48, 195, 195, 195, 234, 195, 222, 195, 195, 195, 195, 195, 195, 195, 195, 195, 109, 195, 28, 159, 195, 195, 112, 195, 45, 151, 125, 55, 37, 88, 55, 37, 168, 231, 116, 116, 55, 116, 88, 55, 37, 61, 66, 24, 7, 7, 26, 61, 7, 61, 61, 66, 151, 88, 48, 88, 88, 194, 37, 168, 150, 116, 93, 93, 88, 88, 93, 88, 88, 183, 24, 93, 7, 88, 93, 93, 112, 61, 45, 62, 48, 48, 62, 195, 48, 234, 150, 150, 109, 195, 48, 195, 195, 195, 112, 149, 149, 109, 109, 28, 112, 195, 38, 112, 112, 45, 14, 84, 84, 164, 164, 138, 164, 164, 138, 89, 84, 84, 89, 240, 138, 154, 154, 138, 89, 89, 145, 89, 89, 146, 154, 154, 146, 14, 14, 84, 14, 105, 105, 164, 164, 138, 14, 240, 84, 159, 240, 105, 154, 240, 138, 89, 57, 57, 159, 159, 110, 154, 110, 110, 14, 14, 187, 14, 19, 19, 234, 19, 19, 14, 57, 57, 159, 159, 19, 159, 19, 19, 159, 57, 57, 159, 159, 110, 159, 110, 110, 151, 84, 84, 164, 88, 84, 164, 168, 138, 89, 88, 84, 88, 88, 88, 154, 88, 146, 89, 7, 7, 26, 88, 146, 154, 146, 146, 14, 88, 84, 88, 88, 105, 234, 168, 168, 88, 93, 93, 88, 88, 93, 88, 88, 183, 109, 93, 93, 159, 93, 93, 64, 88, 146, 14, 48, 48, 234, 195, 48, 234, 234, 19, 109, 195, 57, 159, 195, 195, 234, 195, 19, 109, 109, 57, 159, 159, 38, 64, 64, 38, 151, 151, 55, 151, 168, 55, 168, 168, 168, 151, 151, 55, 26, 88, 55, 26, 168, 168, 26, 7, 7, 26, 26, 7, 26, 26, 146, 151, 151, 48, 151, 168, 48, 234, 168, 168, 151, 93, 93, 88, 93, 93, 64, 168, 168, 109, 109, 7, 26, 93, 38, 64, 64, 38, 111, 48, 48, 234, 48, 48, 234, 234, 124, 109, 109, 48, 64, 195, 38, 64, 64, 38, 109, 109, 38, 64, 38, 38, 64, 64, 38, 41, 72, 46, 153, 72, 239, 153, 153, 63, 115, 72, 170, 240, 240, 238, 39, 238, 238, 115, 115, 170, 128, 240, 170, 237, 237, 47, 121, 36, 36, 103, 103, 239, 227, 101, 63, 141, 240, 36, 240, 103, 103, 134, 103, 238, 141, 141, 170, 141, 240, 209, 237, 237, 71, 121, 121, 213, 227, 101, 213, 227, 101, 222, 141, 141, 49, 141, 103, 103, 227, 101, 222, 141, 141, 49, 141, 141, 49, 67, 163, 71, 201, 72, 235, 201, 194, 194, 153, 194, 231, 201, 201, 233, 201, 201, 51, 86, 238, 238, 115, 140, 140, 209, 209, 209, 237, 237, 47, 201, 194, 36, 201, 194, 194, 194, 194, 194, 201, 201, 209, 201, 209, 209, 86, 43, 238, 133, 209, 209, 209, 209, 209, 237, 43, 45, 62, 10, 10, 194, 194, 10, 227, 101, 222, 133, 133, 10, 133, 195, 195, 86, 149, 149, 133, 133, 28, 133, 133, 209, 97, 43, 45, 185, 125, 235, 96, 96, 231, 37, 231, 231, 116, 116, 235, 96, 96, 51, 37, 61, 66, 24, 140, 140, 61, 61, 66, 61, 61, 66, 94, 254, 235, 96, 194, 194, 122, 194, 150, 116, 254, 25, 86, 149, 149, 86, 149, 149, 24, 209, 28, 86, 209, 209, 97, 43, 45, 94, 254, 70, 94, 254, 70, 122, 150, 150, 94, 254, 28, 86, 149, 149, 97, 149, 149, 189, 28, 28, 189, 248, 28, 97, 97, 45, 178, 72, 172, 240, 240, 172, 153, 194, 63, 240, 240, 172, 240, 240, 240, 134, 240, 238, 115, 240, 170, 240, 240, 240, 192, 226, 216, 240, 240, 36, 240, 240, 194, 134, 194, 63, 240, 240, 240, 240, 240, 240, 134, 240, 1, 240, 240, 240, 240, 240, 240, 67, 240, 1, 215, 152, 144, 215, 240, 144, 227, 101, 222, 240, 240, 144, 240, 240, 240, 67, 1, 1, 107, 240, 49, 67, 240, 240, 67, 67, 71, 201, 194, 13, 201, 194, 194, 194, 194, 194, 201, 27, 27, 201, 27, 51, 86, 88, 238, 27, 27, 27, 27, 27, 27, 86, 226, 226, 201, 194, 194, 194, 194, 194, 194, 194, 194, 201, 93, 93, 86, 240, 93, 86, 43, 1, 90, 93, 93, 86, 240, 93, 86, 43, 1, 111, 194, 10, 194, 194, 194, 194, 194, 194, 133, 195, 195, 86, 195, 195, 86, 1, 1, 133, 195, 195, 133, 195, 195, 67, 43, 45, 185, 13, 13, 96, 194, 194, 37, 194, 231, 116, 27, 27, 86, 27, 27, 86, 27, 157, 98, 27, 7, 27, 27, 27, 135, 61, 157, 111, 194, 194, 194, 194, 194, 194, 194, 194, 86, 93, 93, 86, 86, 93, 86, 43, 149, 86, 93, 93, 86, 93, 93, 86, 43, 45, 111, 254, 246, 111, 194, 194, 122, 194, 208, 111, 195, 195, 86, 195, 195, 86, 149, 149, 189, 195, 28, 86, 195, 76, 97, 43, 45, 178, 178, 172, 164, 251, 172, 164, 164, 138, 131, 131, 172, 240, 240, 172, 154, 226, 138, 89, 131, 102, 192, 226, 216, 192, 226, 216, 14, 152, 187, 240, 240, 105, 164, 194, 42, 240, 240, 240, 240, 240, 240, 134, 1, 1, 107, 240, 102, 240, 240, 240, 35, 1, 110, 152, 152, 187, 80, 152, 187, 80, 80, 42, 107, 152, 187, 159, 240, 1, 35, 1, 161, 107, 107, 57, 159, 159, 110, 35, 161, 110, 181, 13, 13, 251, 251, 251, 250, 251, 32, 131, 251, 251, 251, 251, 251, 251, 251, 251, 131, 27, 7, 192, 226, 226, 192, 226, 146, 111, 194, 194, 194, 194, 194, 194, 194, 42, 90, 93, 93, 86, 93, 93, 86, 1, 1, 90, 93, 93, 90, 93, 93, 86, 1, 1, 111, 152, 187, 111, 194, 194, 234, 194, 42, 111, 195, 195, 86, 195, 195, 86, 1, 1, 160, 195, 76, 159, 195, 76, 64, 1, 161, 181, 13, 13, 181, 251, 55, 250, 168, 32, 181, 27, 55, 251, 251, 251, 250, 251, 157, 98, 7, 7, 26, 27, 7, 26, 157, 157, 111, 111, 246, 111, 194, 194, 250, 168, 208, 111, 93, 93, 86, 93, 93, 86, 1, 157, 160, 93, 93, 86, 93, 93, 64, 1, 157, 111, 111, 246, 111, 111, 208, 234, 208, 208, 111, 111, 246, 111, 195, 76, 64, 1, 208, 160, 160, 76, 64, 76, 76, 64, 64, 38, 72, 72, 46, 39, 72, 46, 39, 39, 63, 115, 72, 46, 39, 72, 238, 39, 39, 238, 115, 115, 140, 115, 115, 47, 237, 237, 47, 121, 72, 46, 215, 72, 46, 114, 101, 63, 141, 72, 46, 141, 103, 238, 114, 238, 238, 141, 141, 49, 141, 141, 49, 237, 237, 71, 121, 121, 144, 215, 101, 137, 114, 101, 137, 141, 141, 49, 141, 141, 49, 114, 101, 137, 141, 141, 49, 141, 141, 49, 67, 71, 71, 185, 72, 235, 241, 72, 54, 241, 54, 54, 201, 72, 235, 201, 201, 238, 39, 238, 238, 115, 140, 140, 115, 140, 47, 237, 237, 47, 201, 10, 10, 201, 194, 10, 122, 101, 54, 201, 201, 10, 201, 201, 74, 86, 43, 238, 133, 133, 247, 133, 43, 74, 237, 43, 47, 94, 10, 10, 215, 10, 10, 122, 101, 137, 133, 133, 10, 133, 133, 10, 97, 101, 137, 133, 133, 247, 133, 133, 247, 97, 43, 71, 185, 185, 235, 241, 54, 54, 241, 54, 54, 185, 140, 235, 241, 96, 54, 241, 54, 54, 98, 140, 140, 135, 140, 140, 135, 135, 47, 94, 254, 235, 94, 254, 54, 122, 54, 54, 94, 254, 235, 86, 254, 74, 97, 43, 54, 189, 247, 247, 189, 43, 247, 97, 43, 202, 94, 254, 70, 94, 254, 70, 122, 122, 70, 94, 254, 70, 94, 254, 70, 97, 202, 202, 189, 247, 247, 189, 247, 247, 97, 202, 202, 178, 72, 172, 178, 72, 172, 15, 15, 63, 131, 72, 172, 240, 240, 172, 39, 238, 238, 115, 115, 102, 192, 240, 216, 192, 216, 216, 215, 72, 144, 215, 194, 144, 15, 101, 63, 240, 240, 144, 240, 240, 74, 134, 43, 238, 107, 240, 102, 240, 240, 74, 67, 43, 71, 215, 144, 144, 215, 215, 144, 80, 101, 137, 215, 144, 144, 215, 240, 144, 67, 101, 137, 107, 107, 49, 67, 240, 49, 67, 67, 71, 185, 72, 13, 201, 194, 194, 241, 194, 32, 201, 27, 74, 201, 27, 74, 86, 43, 238, 98, 27, 140, 27, 27, 74, 135, 43, 47, 201, 194, 10, 201, 194, 194, 194, 194, 194, 201, 201, 74, 201, 43, 74, 86, 43, 74, 133, 190, 74, 190, 43, 74, 43, 43, 43, 215, 10, 10, 215, 194, 10, 122, 101, 137, 133, 133, 10, 133, 130, 74, 86, 43, 137, 133, 133, 247, 133, 43, 76, 67, 43, 71, 185, 13, 13, 241, 194, 54, 241, 54, 54, 185, 27, 73, 86, 27, 74, 135, 43, 157, 98, 98, 73, 135, 27, 73, 135, 135, 157, 94, 254, 246, 194, 194, 194, 122, 194, 54, 86, 254, 74, 86, 43, 74, 86, 43, 157, 98, 190, 247, 86, 43, 76, 135, 43, 157, 94, 254, 246, 158, 254, 70, 122, 122, 208, 94, 254, 246, 86, 254, 76, 97, 43, 202, 189, 247, 247, 189, 76, 76, 97, 202, 202, 178, 178, 172, 178, 178, 172, 15, 15, 32, 131, 131, 172, 131, 131, 172, 15, 15, 216, 131, 131, 102, 192, 216, 216, 192, 216, 216, 178, 152, 187, 178, 194, 187, 15, 15, 42, 131, 131, 102, 240, 240, 74, 35, 161, 161, 107, 102, 102, 35, 240, 102, 35, 161, 161, 152, 152, 187, 80, 152, 187, 80, 80, 42, 107, 152, 187, 35, 130, 187, 35, 161, 161, 107, 107, 102, 35, 161, 161, 35, 161, 161, 181, 13, 13, 181, 251, 32, 250, 32, 32, 131, 131, 73, 131, 251, 74, 250, 226, 32, 131, 131, 73, 192, 226, 216, 192, 226, 216, 181, 194, 187, 194, 194, 194, 250, 194, 42, 131, 130, 74, 130, 130, 74, 86, 43, 74, 160, 190, 102, 190, 190, 76, 35, 43, 161, 152, 152, 187, 158, 130, 187, 80, 80, 42, 160, 130, 187, 130, 130, 76, 35, 130, 161, 160, 160, 76, 160, 76, 76, 35, 161, 161, 181, 13, 13, 181, 181, 32, 250, 250, 32, 181, 73, 73, 181, 27, 73, 250, 157, 157, 98, 73, 73, 98, 73, 73, 135, 157, 157, 181, 246, 246, 158, 184, 246, 250, 184, 208, 181, 106, 246, 86, 184, 76, 167, 184, 157, 160, 160, 73, 160, 76, 76, 167, 167, 157, 158, 246, 246, 158, 158, 208, 158, 208, 208, 160, 246, 246, 158, 76, 76, 167, 167, 208, 160, 160, 76, 160, 76, 76, 167, 167, 76};
	
	// factor for adjusting threshold, alpha is in range [0,1]
	float alpha = 0.3; 

	// threshold calculation: theta = alpha*sigma = alpha*(sqrt(E(X-E(X))^2)))
	
	Mat img_mu, img_mu2, img_sigma, img_thresh, img_ltp;
	// standard deviation sigma
	blur(img_gray, img_mu, Size(3,3));
	blur(img_gray.mul(img_gray), img_mu2, Size(3,3));
	cv::sqrt(img_mu2 - img_mu.mul(img_mu), img_sigma);
	// threshold theta
	img_thresh = img_sigma.mul(alpha);

	//compute LTP feature value
	int sz[] = {8};
	img_ltp = Mat::zeros(img_gray.rows-2, img_gray.cols-2, CV_8U);
	for(int i=1;i<img_gray.rows-1;i++) {
		for(int j=1;j<img_gray.cols-1;j++) {
			float threshold = img_thresh.at<float>(i,j) + img_gray.at<float>(i,j);
			float threshold2 = img_thresh.at<float>(i,j);

			int ltp_result = 0;
			if (img_gray.at<float>(i-1,j-1) > threshold){ltp_result += 2;}    //add 2*3^0
			if (img_gray.at<float>(i-1,j) > threshold){ltp_result += 6;}      //add 2*3^1
			if (img_gray.at<float>(i-1,j+1) > threshold) {ltp_result += 18;}  //add 2*3^2
			if (img_gray.at<float>(i,j+1) > threshold){ltp_result += 54;}     //add 2*3^3
			if (img_gray.at<float>(i+1,j+1) > threshold){ltp_result += 162;}  //add 2*3^4
			if (img_gray.at<float>(i+1,j) > threshold){ltp_result += 486;}    //add 2*3^5
			if (img_gray.at<float>(i+1,j-1) > threshold){ltp_result += 1458;} //add 2*3^6 
			if (img_gray.at<float>(i,j-1) > threshold){ltp_result += 4374;}   //add 2*3^7

			if (abs(img_gray.at<float>(i-1,j-1) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 1;}   //add 1*3^0
			if (abs(img_gray.at<float>(i-1,j) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 3;}     //add 1*3^1
			if (abs(img_gray.at<float>(i-1,j+1) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 9;}   //add 1*3^2
			if (abs(img_gray.at<float>(i,j+1) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 27;}    //add 1*3^3
			if (abs(img_gray.at<float>(i+1,j+1) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 81;}  //add 1*3^4
			if (abs(img_gray.at<float>(i+1,j) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 243;}   //add 1*3^5
			if (abs(img_gray.at<float>(i+1,j-1) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 729;} //add 1*3^6
			if (abs(img_gray.at<float>(i,j-1) - img_gray.at<float>(i,j)) < threshold2) {ltp_result += 2187;}  //add 1*3^7

			// map values into smaller range by using predefined look-up table			
			img_ltp.at<unsigned char>(i-1,j-1) = cluster_arr[ltp_result];
			

		}
	}

	// create histogram
	feature_buffer_.clear();
    feature_buffer_.resize(256, 0.0);
    for (int ii = 0; ii < img_ltp.rows; ++ii)
    {
        for (int jj = 0; jj < img_ltp.cols; ++jj)
        {
            ++feature_buffer_[(int)img_ltp.at<uchar>(ii,jj)];
        }
    }

    return feature_buffer_;
}



double LocTernPattern::distance(const OutputType &f1,
                                    const OutputType &f2) const
{
    return dist_->compute(f1, f2);
}



bool LocTernPattern::writeToFile(const string &fname) const
{
    ofstream ofs(fname.c_str());
    if (!ofs.is_open())
    {
        cerr << "could not open file for writing..." << endl;
        return false;
    }

    ofs << feature_buffer_.size() << " ";
    for (size_t ii = 0; ii < feature_buffer_.size(); ++ii)
    {
        ofs << feature_buffer_[ii] << " ";
    }
    ofs << endl;
    ofs.close();
    return true;
}



bool LocTernPattern::readFromFile(const string &fname)
{
    ifstream ifs(fname.c_str());
    if (!ifs.is_open())
    {
        cerr << "could not open file for reading..." << endl;
        return false;
    }

    size_t s = 0;
    ifs >> s;
    feature_buffer_.resize(s, 0);

    for (size_t ii = 0; ii < feature_buffer_.size(); ++ii)
    {
        ifs >> feature_buffer_[ii];
    }
    ifs.close();
    return true;
}


#ifdef HAVE_MATLAB
/** Interface function for Matlab access.
 * @param classid data type of matlab's mxArray. e.g., mxDOUBLE_CLASS.
 * @param nOutput number of output arguments
 * @param output pointers to output mxArrays
 * @param nInput number of input arguments
 * @param input pointers to input mxArrays - input[0]: string which specifies the desired method - input[1]: object handle - input[2..n]: method input parameters			
 */
void mexFunction(int nOutput, mxArray* output[], int nInput, const mxArray* input[]) {
	 
	//// Get the command string
    char cmd[64];
	if (nInput < 1 || mxGetString(input[0], cmd, sizeof(cmd)))
		mexErrMsgTxt("First input should be a command string less than 64 characters long.");
        
	//// Construction / Destruction
    // New
    if (!strcmp("new", cmd)) {
        // Check parameters
        if (nOutput != 1)
            mexErrMsgTxt("New: One output expected.");
        // Return a handle to a new C++ instance
        output[0] = convertPtr2Mat<LocTernPattern>(new LocTernPattern);
        return;
    }
    
    // Check there is a second input, which should be the class instance handle
    if (nInput < 2)
		mexErrMsgTxt("Second input should be a class instance handle.");
    
    // Delete
    if (!strcmp("delete", cmd)) {
        // Destroy the C++ object
        destroyObject<LocTernPattern>(input[1]);
        // Warn if other commands were ignored
        if (nOutput != 0 || nInput != 2)
            mexWarnMsgTxt("Delete: Unexpected arguments ignored.");
        return;
    }
    
    // Get the class instance pointer from the second input
    LocTernPattern* LocTernPattern_instance = convertMat2Ptr<LocTernPattern>(input[1]);
    
    //// Call the various class methods
    // Compute    
    if (!strcmp("compute", cmd)) {
        //// Check parameters
        if (nOutput > 1 || nInput != 3) {
            mexErrMsgTxt("compute: Wrong number of arguments");
		}		
		
		//// prepare method parameters, conversion from Matlab datatypes to C++ datatypes
		// argument vector
		vector<MxArray> args(input, input + nInput);		
		// convert Matlab image to OpenCV image
		cv::Mat image(args[2].toMat());
			
        //// Call the method
        LocTernPattern::OutputType feature = LocTernPattern_instance->compute(image);	
		
		//// process method results, conversion from C++ datatypes to Matlab datatypes		
        output[0] = mxCreateDoubleMatrix(1, feature.size(), mxREAL);
        double* dataPtr = mxGetPr(output[0]); // Get the pointer to output variable
		memcpy(dataPtr, feature.data(), sizeof(double)*feature.size());		
		
        return;
    }
    // Distance    
    if (!strcmp("distance", cmd)) {
        //// Check parameters
        if (nOutput > 1 || nInput != 4) {
            mexErrMsgTxt("distance: Unexpected arguments.");
		}
		
		//// prepare method parameters, conversion from matlab datatypes to c++ datatypes
		// Check if the input feature is in double format
		if (!(mxIsDouble(input[2])) || !(mxIsDouble(input[3]))) {
		    mexErrMsgTxt("Input feature must be of type double");
		}
		
		
		// Get the features from the input data
		// first feature
		LocTernPattern::OutputType ft1;		
		double* ft1Data =  mxGetPr(input[2]);
		int nCols = mxGetN(input[2]); // Gives the number of Columns
		int nRows = mxGetM(input[2]); // Gives the number of Rows
		for(int i = 0; i < nCols; i++) {
		   for(int j = 0; j < nRows; j++) {
				double value = ft1Data[(i*nRows)+j];
				ft1.push_back(value);
			}
		}
		// second feature
		LocTernPattern::OutputType ft2;		
		double* ft2Data =  mxGetPr(input[3]);
		nCols = mxGetN(input[3]); // Gives the number of Columns
		nRows = mxGetM(input[3]); // Gives the number of Rows
		for(int i = 0; i < nCols; i++) {
		   for(int j = 0; j < nRows; j++) {
				double value = ft2Data[(i*nRows)+j];
				ft2.push_back(value);
			}
		}
		
        //// Call the method
        double distance = LocTernPattern_instance->distance(ft1, ft2);
				
		//// process method results, conversion from c++ datatypes to matlab datatypes	
        output[0] = mxCreateDoubleMatrix(1, 1, mxREAL);
        double* dataPtr = mxGetPr(output[0]); // Get the pointer to output variable
		*dataPtr = distance;
		
        return;
    }
	// Write to file
    if (!strcmp("writeToFile", cmd)) {
        //// Check parameters
        if (nOutput > 1 || nInput != 3) {
            mexErrMsgTxt("writeToFile: Wrong number of arguments");
		}
		
		//// Get the file path string
		char* path = mxArrayToString(input[2]);
		if (path == NULL) {
			mexErrMsgTxt("writeToFile: Conversion of file name string failed.");
		}
					
        //// Call the method
        bool successful = LocTernPattern_instance->writeToFile(path);			
		
		//// convert results, conversion from C++ datatypes to Matlab datatypes		
		int dims[2] = {1,1};
        output[0] = mxCreateNumericArray(2, dims, mxLOGICAL_CLASS, mxREAL);
        bool* dataPtr = (bool*)mxGetData(output[0]); // Get the pointer to output variable
		*dataPtr = successful;	
		
		// cleanup
		mxFree(path);
		
        return;
    }
	// Read from file
    if (!strcmp("readFromFile", cmd)) {
        //// Check parameters
        if (nOutput > 1 || nInput != 3) {
            mexErrMsgTxt("readFromFile: Wrong number of arguments");
		}
		
		//// Get the file path string
		char* path = mxArrayToString(input[2]);
		if (path == NULL) {
			mexErrMsgTxt("readFromFile: Conversion of file name string failed.");
		}
					
        //// Call the method
        bool successful = LocTernPattern_instance->readFromFile(path);			
		
		//// convert results, conversion from C++ datatypes to Matlab datatypes		
		int dims[2] = {1,1};
        output[0] = mxCreateNumericArray(2, dims, mxLOGICAL_CLASS, mxREAL);
        bool* dataPtr = (bool*)mxGetData(output[0]); // Get the pointer to output variable
		*dataPtr = successful;	
		
		// cleanup
		mxFree(path);
		
        return;
    }
    
    // Got here, so command not recognized
    mexErrMsgTxt("Command not recognized.");
}
#endif
